default_platform(:ios)

# Common 헬퍼 파일들 import
import "common/auth_helper.rb"
import "common/app_helper.rb"
import "common/version_helper.rb"

platform :ios do
  desc "Upload to TestFlight"
  lane :upload_testflight do
    xcode_select "/Applications/Xcode-16.3.0.app" # Xcode 버전 지정
    setup_api_key
    
    app_name = select_app
    if app_name.nil?
      UI.error("앱 선택이 취소되었습니다.")
      next
    end
    
    app_info = get_app_info(app_name)
    if app_info.nil?
      next
    end
    
    version_number = UI.input("새 버전 번호를 입력하세요 (현재값 유지하려면 엔터): ")
    
    # 빌드 번호를 현재 날짜시간으로 자동 생성 (예: 20241201140530)
    build_number = Time.now.strftime("%Y%m%d%H%M%S")
    UI.message("자동 생성된 빌드 번호: #{build_number}")
    
    update_version(
      app_info, 
      version_number.empty? ? nil : version_number,
      build_number
    )
    
        UI.message("#{app_info[:name]} 앱을 TestFlight에 업로드합니다...")
    
    # App Store 인증서/프로파일 매치
    ENV['MATCH_TYPE'] = 'appstore'
    match(
      type: "appstore",
      app_identifier: app_info[:bundle_id],
      readonly: true,
      force_legacy_encryption: true,
      username: "mooyoung2309@gmail.com"
    )
    
    enable_automatic_code_signing(
      path: app_info[:project_path]
    )
    
    gym(
      scheme: app_info[:scheme],
      project: app_info[:project_path],
      configuration: "Release",
      export_method: "app-store",
      clean: true
    )
    
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      distribute_external: false,
      notify_external_testers: false
    )
    
    UI.success("#{app_info[:name]} 앱이 성공적으로 TestFlight에 업로드되었습니다! 🎉")
  end
  
  desc "Delete all certificates and profiles (development + appstore)"
  lane :nuke do
    setup_api_key
    
    UI.message("모든 인증서와 프로파일을 삭제합니다...")
    
    # Development 인증서/프로파일 삭제
    UI.message("Development 인증서/프로파일 삭제 중...")
    ENV['MATCH_TYPE'] = 'development'
    match_nuke(
      type: "development",
      app_identifier: get_all_bundle_ids,
      skip_confirmation: false
    )
    
    # App Store 인증서/프로파일 삭제
    UI.message("App Store 인증서/프로파일 삭제 중...")
    ENV['MATCH_TYPE'] = 'appstore'
    match_nuke(
      type: "appstore",
      app_identifier: get_all_bundle_ids,
      skip_confirmation: false
    )
    
    UI.success("모든 인증서와 프로파일이 삭제되었습니다! 🗑️")
  end
  
  desc "Generate certificates and profiles (development + appstore)"
  lane :sign do
    setup_api_key
    
    UI.message("인증서와 프로파일을 생성합니다...")
    
    # Development 인증서/프로파일 생성
    UI.message("Development 인증서/프로파일 생성 중...")
    ENV['MATCH_TYPE'] = 'development'
    match(
      type: "development",
      app_identifier: get_all_bundle_ids,
      readonly: false,
      force_legacy_encryption: true,
      username: "mooyoung2309@gmail.com"
    )
    
    # App Store 인증서/프로파일 생성
    UI.message("App Store 인증서/프로파일 생성 중...")
    ENV['MATCH_TYPE'] = 'appstore'
    match(
      type: "appstore",
      app_identifier: get_all_bundle_ids,
      readonly: false,
      force_legacy_encryption: true,
      username: "mooyoung2309@gmail.com"
    )
    
    UI.success("모든 인증서와 프로파일이 생성되었습니다! 🔐")
  end
end