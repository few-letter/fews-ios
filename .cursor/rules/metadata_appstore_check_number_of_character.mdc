---
description: Fastlane App Store 메타데이터 글자수 제한 규칙
globs: 
alwaysApply: false
---
# Fastlane App Store 메타데이터 글자수 제한 규칙

## 📋 Apple App Store 글자수 제한
Apple App Store Connect에서 각 메타데이터 파일별로 글자수 제한이 있습니다:

- **name.txt**: 최대 30자 (앱 이름)
- **subtitle.txt**: 최대 30자 (부제목)
- **keywords.txt**: 최대 100자 (키워드, 쉼표 포함)
- **description.txt**: 최대 4,000자 (앱 설명)

## 📁 기준 파일 구조 확인

### 한국어(ko/) 폴더 필수 파일 목록
모든 번역의 기준이 되는 ko/ 폴더에는 다음 8개 파일이 있어야 합니다:

1. `name.txt` - 앱 이름
2. `subtitle.txt` - 부제목  
3. `description.txt` - 앱 설명
4. `keywords.txt` - 키워드
5. `release_notes.txt` - 릴리즈 노트
6. `privacy_url.txt` - 개인정보 URL
7. `marketing_url.txt` - 마케팅 URL
8. `support_url.txt` - 지원 URL

### ko/ 폴더 파일 개수 확인 명령어
```bash
echo "=== 한국어(ko/) 폴더 파일 개수 확인 ==="
ko_files=$(find fastlane/metadata/{AppName}/ko -name "*.txt" | wc -l)
echo "ko/ 폴더 내 .txt 파일 개수: $ko_files개"
if [ $ko_files -ne 8 ]; then
    echo "❌ 경고: 필수 파일 8개가 모두 존재하지 않습니다!"
    echo "현재 파일 목록:"
    ls -la fastlane/metadata/{AppName}/ko/
else
    echo "✅ 필수 파일 8개가 모두 존재합니다."
fi
```

## 📁 빈 파일 확인 및 검증

### 한국어 기준 폴더 빈 파일 확인
```bash
echo "=== 한국어(ko/) 폴더 빈 파일 확인 ==="
find fastlane/metadata/{AppName}/ko -name "*.txt" -exec sh -c '
    if [ ! -s "$1" ]; then
        echo "❌ 빈 파일: $1"
    fi
' _ {} \;
echo "✅ 빈 파일 확인 완료"
```

### 전체 언어 폴더 빈 파일 확인
```bash
echo "=== 전체 언어 폴더 빈 파일 확인 ==="
find fastlane/metadata/{AppName} -name "*.txt" -exec sh -c '
    if [ ! -s "$1" ]; then
        echo "❌ 빈 파일: $1"
    fi
' _ {} \;
echo "✅ 전체 빈 파일 확인 완료"
```

### 언어별 파일 개수 비교 확인
```bash
echo "=== 언어별 파일 개수 비교 ==="
ko_count=$(find fastlane/metadata/{AppName}/ko -name "*.txt" | wc -l)
echo "기준(ko/): $ko_count개 파일"

for lang_dir in fastlane/metadata/{AppName}/*/; do
    if [ "$(basename "$lang_dir")" != "ko" ]; then
        lang=$(basename "$lang_dir")
        lang_count=$(find "$lang_dir" -name "*.txt" | wc -l)
        if [ $lang_count -ne $ko_count ]; then
            echo "❌ $lang: $lang_count개 (기준과 다름)"
        else
            echo "✅ $lang: $lang_count개"
        fi
    fi
done
```

## 🔍 글자수 검증 명령어

### 통합 검증 명령어 (권장)
파일 존재 여부, 빈 파일, 글자수 제한을 모두 확인:

```bash
echo "=== 통합 메타데이터 검증 ==="

# 1. 파일 개수 확인
ko_files=$(find fastlane/metadata/{AppName}/ko -name "*.txt" | wc -l)
echo "1️⃣ ko/ 폴더 파일 개수: $ko_files개 (필요: 8개)"

# 2. 빈 파일 확인
echo "2️⃣ 빈 파일 확인:"
empty_files=$(find fastlane/metadata/{AppName} -name "*.txt" -exec sh -c '[ ! -s "$1" ] && echo "$1"' _ {} \;)
if [ -z "$empty_files" ]; then
    echo "✅ 빈 파일 없음"
else
    echo "❌ 빈 파일 발견:"
    echo "$empty_files"
fi

# 3. 글자수 제한 확인
echo "3️⃣ 글자수 제한 확인:"
find fastlane/metadata/{AppName} -name "*.txt" -exec sh -c '
    chars=$(wc -c < "$1")
    filename=$(basename "$1")
    if ([ "$filename" = "name.txt" ] && [ $chars -gt 30 ]) || \
       ([ "$filename" = "subtitle.txt" ] && [ $chars -gt 30 ]) || \
       ([ "$filename" = "keywords.txt" ] && [ $chars -gt 100 ]); then
        echo "❌ $1: $chars chars (제한 초과)"
        echo "Content: $(cat "$1")"
        echo "---"
    fi
' _ {} \;

echo "✅ 통합 검증 완료"
```

### 개별 파일 유형별 검증 명령어

#### name.txt (앱 이름) 검증
```bash
find fastlane/metadata/{AppName} -name "name.txt" -exec sh -c '
    chars=$(wc -c < "$1")
    if [ $chars -gt 30 ]; then
        echo "❌ $1: $chars chars"
        echo "Content: $(cat "$1")"
        echo "---"
    fi
' _ {} \;
```

#### subtitle.txt (부제목) 검증
```bash
find fastlane/metadata/{AppName} -name "subtitle.txt" -exec sh -c '
    chars=$(wc -c < "$1")
    if [ $chars -gt 30 ]; then
        echo "❌ $1: $chars chars"
        echo "Content: $(cat "$1")"
        echo "---"
    fi
' _ {} \;
```

#### keywords.txt (키워드) 검증
```bash
find fastlane/metadata/{AppName} -name "keywords.txt" -exec sh -c '
    chars=$(wc -c < "$1")
    if [ $chars -gt 100 ]; then
        echo "❌ $1: $chars chars"
        echo "Content: $(cat "$1")"
        echo "---"
    fi
' _ {} \;
```

## 📊 검증 결과 해석

### ✅ 성공 시
- 파일 개수: ko/ 폴더에 8개 파일 존재
- 빈 파일: 없음
- 글자수: 아무 출력 없음 (모든 파일이 제한 범위 내)

### ❌ 실패 시
- 파일 개수 부족: 누락된 파일 확인 및 생성 필요
- 빈 파일 존재: 해당 파일에 내용 추가 필요
- 글자수 초과: 초과한 파일들이 "❌" 표시와 함께 출력됨

## 🛠️ 문제 해결 방법

### 1. 파일 개수 부족 시
```bash
# 누락된 파일 확인
echo "필수 파일 목록:"
echo "name.txt subtitle.txt description.txt keywords.txt release_notes.txt privacy_url.txt marketing_url.txt support_url.txt" | tr ' ' '\n'

echo "현재 존재하는 파일:"
ls fastlane/metadata/{AppName}/ko/
```

### 2. 빈 파일 해결 시
- ko/ 폴더의 빈 파일: 직접 내용 작성
- 다른 언어 폴더의 빈 파일: ko/ 폴더에서 번역하여 추가

### 3. 글자수 초과 시 대응 방법

#### name.txt 수정 전략
- 브랜드명은 유지하고 부가 설명 제거
- 예: `Plots - 책 읽기 일기장` → `Plots - 독서일기`

#### subtitle.txt 수정 전략  
- 핵심 기능만 간결하게 표현
- 불필요한 조사나 연결어 제거
- 예: `책, 영화, 문화생활 기록` → `책, 영화, 문화 기록`

#### keywords.txt 수정 전략
- 가장 중요한 키워드만 선별
- 중복되는 의미의 키워드 제거
- 쉼표와 공백도 글자수에 포함됨을 주의

#### 멀티바이트 문자 주의사항
- 힌디어, 아랍어, 한자 등은 바이트 수가 많이 차지
- 실제 표시되는 글자수보다 바이트 수가 훨씬 클 수 있음
- 더 간결한 표현으로 수정 필요

## 📝 사용 예시

### Capts 앱 전체 검증
```bash
# 통합 검증
echo "=== Capts 앱 메타데이터 통합 검증 ==="
ko_files=$(find fastlane/metadata/Capts/ko -name "*.txt" | wc -l)
echo "1️⃣ ko/ 폴더 파일 개수: $ko_files개 (필요: 8개)"

empty_files=$(find fastlane/metadata/Capts -name "*.txt" -exec sh -c '[ ! -s "$1" ] && echo "$1"' _ {} \;)
if [ -z "$empty_files" ]; then
    echo "✅ 빈 파일 없음"
else
    echo "❌ 빈 파일 발견:"
    echo "$empty_files"
fi

find fastlane/metadata/Capts -name "*.txt" -exec sh -c '
    chars=$(wc -c < "$1")
    filename=$(basename "$1")
    if ([ "$filename" = "name.txt" ] && [ $chars -gt 30 ]) || \
       ([ "$filename" = "subtitle.txt" ] && [ $chars -gt 30 ]) || \
       ([ "$filename" = "keywords.txt" ] && [ $chars -gt 100 ]); then
        echo "❌ $1: $chars chars"
    fi
' _ {} \;
```

### 다른 앱 검증 시
`{AppName}` 부분을 실제 앱 이름으로 변경:
- `Multis`, `Retros`, `Toffs`, `Plots` 등

## ⚠️ 주의사항
- 번역 작업 전 반드시 ko/ 폴더의 파일 완성도 확인
- 모든 파일이 존재하고 내용이 있는지 검증 후 번역 시작
- Fastlane 업로드 전 반드시 전체 검증 수행
- 번역 작업 후에는 모든 언어에 대해 검증 필요
- 글자수 제한을 초과하면 App Store Connect 업로드 실패
- `wc -c` 명령어는 바이트 수를 계산하므로 멀티바이트 문자 주의
